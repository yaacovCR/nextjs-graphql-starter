version: '3.5'
services:
  api:
    build:
      context: api
      args:
        registry: http://10.0.2.2:4873
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 4000:4000
    depends_on:
      - 'hasura'
    environment:
      - NODE_ENV=development
      - PORT=4000
      - ENDPOINT=/api
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=3000
  site:
    build:
      context: site
      args:
        registry: http://10.0.2.2:4873
    volumes:
      - ./site:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    depends_on:
      - 'api'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=3000
      - GRAPHQL_PROXY_TARGET=http://api:4000
      - GRAPHQL_ENDPOINT=http://localhost:3000/api
      - WS_ENDPOINT=ws://localhost:4000
  hasura:
    image: hasura/graphql-engine:v1.0.0-beta.2
    restart: always
    ports:
      - 5000:8080
    depends_on:
      - 'postgres'
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${DATABASE_URL}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      ## uncomment next line to set an access key
      # HASURA_GRAPHQL_ACCESS_KEY: mysecretaccesskey
  postgres:
    image: postgres:11
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
  redis:
    image: redis:5
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    sysctls:
      net.core.somaxconn: 511
volumes:
  postgres: null
  redis: null
